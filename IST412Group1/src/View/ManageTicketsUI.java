/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

/**
 * This class is the user interface content for managing purchased park tickets.
 * @author Kate
 */
public class ManageTicketsUI extends javax.swing.JPanel {
    private boolean manageTicketsUIActive = false; 
    /**
     * This is the default constructor for the ManageTicketsUI.
     * Creates new form ManageTicketsUI
     */
    public ManageTicketsUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageTicketsTitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ticketsPurchasedTable = new javax.swing.JTable();
        backToMainNavButton = new javax.swing.JButton();

        manageTicketsTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        manageTicketsTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        manageTicketsTitleLabel.setText("Manage Park Tickets Purchased");

        jScrollPane1.setViewportView(ticketsPurchasedTable);

        backToMainNavButton.setText("Back");
        backToMainNavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMainNavButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manageTicketsTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backToMainNavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manageTicketsTitleLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backToMainNavButton)
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backToMainNavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMainNavButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backToMainNavButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToMainNavButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageTicketsTitleLabel;
    private javax.swing.JTable ticketsPurchasedTable;
    // End of variables declaration//GEN-END:variables

    /**
     * Gets the boolean value representing the status of this Manage Tickets user interface.
     * @return the boolean manageTicketsUIActive representing the status of the Manage Tickets user interface.
     */
    public boolean isManageTicketsUIActive() {
        System.out.println("The Manage Tickets UI is active!");
        return manageTicketsUIActive;
    }

    /**
     * Sets the boolean value for the status of this manage tickets user interface.
     * @param manageTicketsUIActive sets the boolean value for the status of this manage tickets user interface.
     */
    public void setManageTicketsUIActive(boolean manageTicketsUIActive) {
        this.manageTicketsUIActive = manageTicketsUIActive;
    }

    
}
