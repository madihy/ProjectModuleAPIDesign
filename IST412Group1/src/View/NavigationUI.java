/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

/**
 * This class is used to display the user interface for the main navigation menu.
 * @author Kate
 */
public class NavigationUI extends javax.swing.JPanel {
    private boolean navigationUIActive = false;

    /**
     * Creates new form NavigationUI
     */
    public NavigationUI() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accountInformationButton = new javax.swing.JButton();
        parkInformationButton = new javax.swing.JButton();
        manageActivitiesButton = new javax.swing.JButton();
        manageFoodOrdersButton = new javax.swing.JButton();
        manageReports = new javax.swing.JButton();
        navigationPanelTitleLabel = new javax.swing.JLabel();
        exitApplicationButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(300, 590));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(300, 590));

        accountInformationButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        accountInformationButton.setText("Account Information");
        accountInformationButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        accountInformationButton.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                accountInformationButtonComponentAdded(evt);
            }
        });

        parkInformationButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        parkInformationButton.setText("Park Information");
        parkInformationButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        manageActivitiesButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        manageActivitiesButton.setText("Manage Activities");
        manageActivitiesButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        manageFoodOrdersButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        manageFoodOrdersButton.setText("Manage Food Orders");
        manageFoodOrdersButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        manageReports.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        manageReports.setText("Manage Reports");
        manageReports.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        navigationPanelTitleLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        navigationPanelTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        navigationPanelTitleLabel.setText("Main Navigation Menu");

        exitApplicationButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        exitApplicationButton.setText("Exit Application");
        exitApplicationButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(exitApplicationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(98, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(navigationPanelTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(accountInformationButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(parkInformationButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(manageActivitiesButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(manageFoodOrdersButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(manageReports, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(navigationPanelTitleLabel)
                .addGap(14, 14, 14)
                .addComponent(accountInformationButton)
                .addGap(13, 13, 13)
                .addComponent(parkInformationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(manageActivitiesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(manageFoodOrdersButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(manageReports)
                .addGap(30, 30, 30)
                .addComponent(exitApplicationButton)
                .addContainerGap(356, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void accountInformationButtonComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_accountInformationButtonComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_accountInformationButtonComponentAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accountInformationButton;
    private javax.swing.JButton exitApplicationButton;
    private javax.swing.JButton manageActivitiesButton;
    private javax.swing.JButton manageFoodOrdersButton;
    private javax.swing.JButton manageReports;
    private javax.swing.JLabel navigationPanelTitleLabel;
    private javax.swing.JButton parkInformationButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Gets the Boolean value representing this navigation interface screen status.
     * @return the Boolean navigationUI representing the navigation interface screen status.
     */
    public boolean isNavigationUIActive() {
        if(navigationUIActive = true){
            System.out.println("Navigation UI is active!");
        }
        else{
            System.out.println("NavigationUI is no longer active!");
        }
        return navigationUIActive;
    }

    /**
     * Sets the boolean status for this navigation interface screen status.
     * @param navigationUI sets the boolean status for the navigation interface screen status.
     * @param navigationUIActive the navigationUIActive to set
     */
    public void setNavigationUIActive(boolean navigationUIActive) {
        this.navigationUIActive = navigationUIActive;
    }

    
    
}
